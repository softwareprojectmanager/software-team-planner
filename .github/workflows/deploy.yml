name: Deploy Hugo site to Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Setup content structure
        run: |
          mkdir -p content/posts
          mkdir -p content/demo
          mkdir -p static/images
          
          if [ -d "_posts" ]; then
            find _posts -name "*.md" -exec cp {} content/posts/ \;
            echo "Posts copied from _posts to content/posts"
          fi
          
          if [ -f "_index.md" ]; then
            cp _index.md content/
            echo "Index page copied"
          fi
          
          if [ -f "demo.html" ]; then
            cat > content/demo/_index.md << 'EOF'
          ---
          title: "Resource Planner Demo"
          date: 2024-01-01
          layout: "demo"
          ---
          
          # Resource Planner Demo
          
          Professional team planning workspace for optimized software development.
          EOF
            
            mkdir -p layouts/demo
            cp demo.html layouts/demo/list.html
            echo "Demo page setup complete"
          fi
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
