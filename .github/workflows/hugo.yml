name: Deploy Hugo to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

- name: Prepare Jekyll Posts for Hugo
  run: |
    mkdir -p content/posts
    
    # Her _posts dosyasını content/posts'a kopyala
    for file in _posts/*.md; do
      if [ -f "$file" ]; then
        # Dosya ismini düzenle
        basename=$(basename "$file" .md)
        cp "$file" "content/posts/$basename.md"
        echo "Copied: $file -> content/posts/$basename.md"
      fi
    done
    
    # Front matter kontrol et
    cd content/posts
    for file in *.md; do
      if ! grep -q "^---" "$file"; then
        # Front matter yoksa ekle
        echo "Adding front matter to $file"
        cat > temp.md << 'EOF'
---
title: "$(echo $file | sed 's/-/ /g' | sed 's/.md//' | sed 's/\b\w/\U&/g')"
date: 2024-01-01
draft: false
---

EOF
        cat "$file" >> temp.md
        mv temp.md "$file"
      fi
    done

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
